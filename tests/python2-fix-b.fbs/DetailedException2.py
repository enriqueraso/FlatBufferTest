# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatBuffers

import flatbuffers

class DetailedException2(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsDetailedException2(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DetailedException2()
        x.Init(buf, n + offset)
        return x

    # DetailedException2
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DetailedException2
    def _exceptionValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def DetailedException2Start(builder): builder.StartObject(1)
def DetailedException2Add_exceptionValue(builder, ExceptionValue): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(ExceptionValue), 0)
def DetailedException2End(builder): return builder.EndObject()
